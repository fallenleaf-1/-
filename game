#define _CRT_SECURE_NO_WARNINGS
#include"c44.h"

void initarr(char p[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for(i = 0 ; i< row;i++)
	{
		for (j = 0; j < col; j++)
		{
			p[i][j] = ' ';
		}
	}
}
void Display(char p[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		int j = 0;
		for(j =0 ; j < col; j++)
		{
			printf(" %c ", p[i][j]);
			printf("|");
		}
		printf("\n");
		for( j = 0 ;  j < col; j++)
		{
			printf("___");
			printf("|");
		}
		printf("\n");
	}
}
void playmove(char p[ROW][COL], int row, int col)
{
	int x, y;
	x=0 , y = 0;
printf("玩家输入\n");
	while (1)
	{
		scanf("%d %d", &x, &y);
		
		printf("输入坐标\n");
		if (x >= 1 && x <= row && y >= 1 && y <= col)
		{
			if (p[x - 1][y - 1] == ' ')
			{
				p[x - 1][y - 1] = 'X';
				break;
			}
			else
			{
				printf("坐标被占用\n");
			}
		}
		else
		{
		printf("坐标非法\n");
		}
	}
}
void computermove(char p[ROW][COL], int row, int col)
{
	printf("电脑下棋\n");
	while (1)
	{
		srand((unsigned int)time(NULL));
		int x, y;
		x = rand() % row;
		y = rand() % col;
		if (p[x][y] == ' ')
		{
			p[x][y] = '*';
			break;
		}
	}
}
int isfull(char p[ROW][COL], int row, int col)
{
	int i , j;
	for (i = 0; i < row; i++)
	{
		for  (j =0 ; j < col;j++ )
		{
			if (p[i][j] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}

int iswin(char p[ROW][COL], int row, int col)
{
	int i = 0;
	for(i = 0; i < row; i++)
	{
		if (p[i][0] == p[i][1] && p[i][1] == p[i][2] && p[i][1] != ' ')
		{
			return p[i][1];
		}
	}
	int j = 0;
	for (j = 0; j < col; j++)
	{
		if (p[0][j] == p[1][j] && p[1][j] == p[2][j] && p[j][1] != ' ')
		{
			return p[1][j];
		}
	}
	if (p[0][0] == p[1][1] && p[1][1] == p[2][2] && p[1][1] != ' ')
	{
		return p[1][1];
	}
	if (p[0][2] == p[1][1] && p[1][1] == p[2][0] && p[1][1] != ' ')
	{
		return p[1][1];
	}
	if (isfull(p, row, col))
	{
		return 'g';
	}
	return 'n';
}
